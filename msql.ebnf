statement: "QUERY" querytype "WHERE" wherefullcondition+ "FILTER" filterfullcondition+
     | "QUERY" querytype "FILTER" filterfullcondition+
     | "QUERY" querytype "WHERE" wherefullcondition+ 
     | "QUERY" querytype

querytype: datams1data
     | datams2data
     | function"(" datams1data ")"
     | function "(" datams2data ")"
     | function"(" datams1data "," param "=" floating ")"

datams1data: "MS1DATA"
datams2data: "MS2DATA"

wherefullcondition: wherefullcondition booleanconjunction wherefullcondition
    | condition ":" qualifier
    | condition

filterfullcondition: filterfullcondition booleanconjunction filterfullcondition
    | condition ":" qualifier
    | condition

// Conditions 
condition: conditionfields equal conditionvalue
    | conditionfields equal "(" statement ")"
    
conditionvalue: conditionvalue "," conditionvalue
    | variable
    | floating

qualifier: qualifier ":" qualifier
    | qualifierfields equal floating
    | qualifierfields equal STRING
    | qualifierfields equal variable
    | qualifierfields greaterthan floating
    | qualifierfields greaterthan STRING
    | qualifierfields lessthan floating
    | qualifierfields lessthan STRING
    | qualifierintensityreference

equal: "="
lessthan: "<"
greaterthan: ">"

conditionfields: ms2productcondition
    | ms2precursorcondition
    | ms2neutrallosscondition
    | ms1mzcondition
    | rtmincondition
    | rtmaxcondition

ms2productcondition: "MS2PROD"
ms2precursorcondition: "MS2PREC"
ms2neutrallosscondition: "MS2NL"
ms1mzcondition: "MS1MZ"
rtmincondition: "RTMIN"
rtmaxcondition: "RTMAX"

qualifierfields: qualifiermztolerance
    | qualifierppmtolerance
    | qualifierintensitypercent
    | qualifierintensityvalue
    | qualifierintensitymatch
    | qualifierintensitytolpercent

qualifiermztolerance: "TOLERANCEMZ"
qualifierppmtolerance: "TOLERANCEPPM"
qualifierintensitypercent: "INTENSITYPERCENT"
qualifierintensityvalue: "INTENSITYVALUE"
qualifierintensitymatch: "INTENSITYMATCH"
qualifierintensitytolpercent: "INTENSITYMATCHPERCENT"
qualifierintensityreference: "INTENSITYMATCHREFERENCE"

function: functionscannum
    | functionscansum
    | functionscanrangesum
    | functionscanmz
    | functionscaninfo

functionscannum: "scannum"
functionscansum: "scansum" 
functionscanrangesum: "scanrangesum"
functionscanmz: "scanmz"
functionscaninfo: "scaninfo"

booleanconjunction: "AND"

param: "TOLERANCE"
floating: /[-+]?([0-9]*\.[0-9]+|[0-9]+)/
// variable: /[A-Z]+/
variable: /[XY]+[-+*]?(([0-9]*\.[0-9]+|[0-9]+)|([0-9]*))/
// variable: /[A-Z]+[-+]([0-9]*\.[0-9]|[0-9]*)|([0-9]+\.[0-9])|([0-9]+)/

%import common.ESCAPED_STRING   -> STRING
%import common.SIGNED_NUMBER    -> NUMBER
%import common.WS
%ignore WS